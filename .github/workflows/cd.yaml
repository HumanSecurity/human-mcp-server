name: cd
on:
  push:
    branches:
      - main

jobs:
  extract_version:
    runs-on: ubuntu-latest
    name: Extract release version
    outputs:
      version: ${{ steps.version.outputs.value }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
      - name: Get package version
        id: version
        run: echo "value=$(node -p -e "require('./package.json').version")" >> "$GITHUB_OUTPUT"

  create_release:
    runs-on: ubuntu-latest
    needs: extract_version
    name: Create release on GitHub
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - run: gh release create v${{ needs.extract_version.outputs.version }} --generate-notes -t "Version ${{ needs.extract_version.outputs.version }}"
        env:
          GITHUB_TOKEN: ${{ github.TOKEN }}
        shell: bash
        name: Creates a release in GitHub

  publish:
    runs-on: ubuntu-22.04
    needs:
      - create_release
      - extract_version

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: Checkout code
        uses: actions/checkout@v5
      - name: Setup npmrc
        uses: actions/setup-node@v4
        with:
          node-version: '22.x'
          registry-url: 'https://registry.npmjs.org'
      - name: Install dependencies
        run: npm install
      - name: Build
        run: npm run build
      - name: Publish package to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Google Auth
        id: auth
        uses: 'google-github-actions/auth@6fc4af4b145ae7821d527454aa9bd537d1f2dc5f'
        with:
          token_format: 'access_token'
          project_id: 'hmn-registry-public'
          service_account: ${{ secrets.SERVICE_ACCOUNT }}
          workload_identity_provider: ${{ secrets.WORKLOAD_IDENTITY_PROVIDER }}

      - name: Docker Auth
        id: docker-auth
        uses: 'docker/login-action@9780b0c442fbb1117ed29e0efdff1e18412f7567'
        with:
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'
          registry: 'us-docker.pkg.dev'


      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          push: true
          platforms: linux/amd64,linux/arm64
          annotations: |
            index:com.googleapis.cloudmarketplace.product.service.name=services/human-mcp-server.endpoints.px-gcp-marketplace-prod.cloud.goog
          tags: |
            us-docker.pkg.dev/hmn-registry-public/containers/human-mcp-server:${{ needs.extract_version.outputs.version }}
            us-docker.pkg.dev/hmn-registry-public/containers/human-mcp-server:latest
